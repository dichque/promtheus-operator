apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: prometheus-operator
  labels:
    app: prometheus-operator
  annotations:
    openshift.io/display-name: "Kafka prometheus-operator install"
    openshift.io/provider-display-name: "Red Hat, Inc."
    description: "."
    tags: "kafka,prometheus,prometheus-operator,monitoring"
    iconClass: "icon-rh-integration"
    version: "1.0"
message: |-
  prometheus-operator is now deployed to ${NAMESPACE}
parameters:
- name: NAMESPACE
  displayName: Namespace
  value: strimzi
  required: true
  description: Namespace in which the prometheus-operator is installed.
- name: CPU_REQUEST
  displayName: CPU request
  value: '100m'
  required: true
  description: The amount of CPU to request for each container.
- name: MEMORY_REQUEST
  displayName: Memory request
  value: '100Mi'
  required: true
  description: The amount of memory required for each container to run.
- name: CPU_LIMIT
  displayName: CPU limit
  value: '200m'
  required: true
  description: The amount of CPU each container is limited to use.
- name: MEMORY_LIMIT
  displayName: Memory limit
  value: '200Mi'
  required: true
  description: The amount of memory each container is limited to use.
- name: CONTAINER_PORT
  displayName: Memory limit
  value: '8080'
  required: true
  description: The amount of memory each container is limited to use.
- name: PROMETHEUS_MEMORY
  displayName: Prometheus Memory Limit
  value: '400Mi'
- name: PROMETHEUS_SERVICE_PORT
  displayName: Prometheus Service Port
  value: '9090'
- name: PORT_NAME
  displayName: Port Name
  value: 'metrics'
  required: true
- name: KAFKA_SERVICE_TEAM
  displayName: Kafka Service team label
  value: 'aims'
  requited: true


objects:
#
# OpenShift resources
#
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: prometheus-operator
    namespace: ${NAMESPACE}

- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: prometheus-operator
    namespace: ${NAMESPACE}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: prometheus-operator
  subjects:
  - kind: ServiceAccount
    name: prometheus-operator
    namespace: ${NAMESPACE}

- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: prometheus-operator
    namespace: ${NAMESPACE}
  rules:
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - '*'
  - apiGroups:
    - monitoring.coreos.com
    resources:
    - alertmanagers
    - prometheuses
    - prometheuses/finalizers
    - alertmanagers/finalizers
    - servicemonitors
    - prometheusrules
    verbs:
    - '*'
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - '*'
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    verbs:
    - '*'
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - delete
  - apiGroups:
    - ""
    resources:
    - services
    - endpoints
    verbs:
    - get
    - create
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: prometheus
    namespace: ${NAMESPACE}

- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    namespace: ${NAMESPACE}
    name: prometheus
  rules:
  - apiGroups: [""]
    resources:
    - nodes
    - nodes/proxy
    - services
    - endpoints
    - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
    - configmaps
    verbs: ["get"]

- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    name: prometheus
    namespace: ${NAMESPACE}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: prometheus
  subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: ${NAMESPACE}


- apiVersion: apps/v1beta2
  kind: Deployment
  metadata:
    labels:
      k8s-app: prometheus-operator
    name: prometheus-operator
    namespace: ${NAMESPACE}
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: prometheus-operator
    template:
      metadata:
        labels:
          k8s-app: prometheus-operator
      spec:
        containers:
        - args:
          - --manage-crds=false
          # - --namespaces=${NAMESPACE}
          - --logtostderr=true
          - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
          - --prometheus-config-reloader=quay.io/coreos/prometheus-config-reloader:v0.26.0
          image: quay.io/coreos/prometheus-operator:v0.26.0
          name: prometheus-operator
          ports:
          - containerPort: ${CONTAINER_PORT}
            name: http
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
        serviceAccountName: prometheus-operator

- apiVersion: monitoring.coreos.com/v1
  kind: Alertmanager
  metadata:
    name: alertmanager
    namespace: ${NAMESPACE}
  spec:
    baseImage: prom/alertmanager
    replicas: 1
    serviceAccountName: prometheus
    version: v0.16.2

# oc create secret generic alertmanager-alertmanager --from-file=alertmanager.yaml

